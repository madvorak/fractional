import Mathlib.Data.NNRat.BigOperators
import Mathlib.Data.NNReal.Basic

open scoped NNReal


@[ext]
structure Distr (Œ± : Type) [Fintype Œ±] : Type where
  theFun : Œ± ‚Üí ‚Ñù‚â•0
  sumOne : Finset.univ.sum theFun = 1

notation "ùçñ " => Distr

abbrev FOP‚ÇÅ (Œ± : Type) [Fintype Œ±] : Type :=
  Œ± ‚Üí ùçñ Œ±

abbrev FOP‚ÇÇ (Œ± : Type) [Fintype Œ±] : Type :=
  Œ± ‚Üí Œ± ‚Üí ùçñ Œ±


variable {Œ± : Type} [Fintype Œ±]

instance : CoeFun (ùçñ Œ±) (fun _ => Œ± ‚Üí ‚Ñù‚â•0) where
  coe := Distr.theFun

instance [DecidableEq Œ±] : Coe Œ± (ùçñ Œ±) where
  coe a := ‚ü®_, Fintype.sum_ite_eq a 1‚ü©

abbrev FOP‚ÇÅ.apply‚ÇÅ (f : FOP‚ÇÅ Œ±) (x : ùçñ Œ±) : ùçñ Œ± where
  theFun (a : Œ±) := ‚àë i : Œ±, x i * f i a
  sumOne := by
    rw [Finset.sum_comm]
    conv => lhs; congr; rfl; ext; rw [‚ÜêFinset.mul_sum, Distr.sumOne, mul_one]
    rw [Distr.sumOne]

abbrev FOP‚ÇÇ.apply‚ÇÇ (f : FOP‚ÇÇ Œ±) (x y : ùçñ Œ±) : ùçñ Œ± where
  theFun (a : Œ±) := ‚àë i : Œ±, ‚àë j : Œ±, x i * y j * f i j a
  sumOne := by
    rw [Finset.sum_comm]
    conv => lhs; congr; rfl; ext; rw [Finset.sum_comm]; congr; rfl; ext; rw [‚ÜêFinset.mul_sum, Distr.sumOne, mul_one]
    conv => lhs; congr; rfl; ext; rw [‚ÜêFinset.mul_sum, Distr.sumOne, mul_one]
    rw [Distr.sumOne]

variable {f : FOP‚ÇÅ Œ±} in
notation:max f"‚åû" => FOP‚ÇÅ.apply‚ÇÅ f

variable {f : FOP‚ÇÇ Œ±} in
notation:max f"‚åû" => FOP‚ÇÇ.apply‚ÇÇ f

/-- `f‚åû x y = ((f ¬∑)‚åû y)‚åû x` -/
theorem FOP‚ÇÇ.apply‚ÇÇ_eq_apply‚ÇÅ_apply‚ÇÅ (f : FOP‚ÇÇ Œ±) (x y : ùçñ Œ±) :
    f‚åû x y = (fun i : Œ± => (f i)‚åû y)‚åû x := by
  ext
  simp only [FOP‚ÇÇ.apply‚ÇÇ, FOP‚ÇÅ.apply‚ÇÅ, NNReal.coe_inj]
  apply congr_arg
  ext
  rw [NNReal.coe_inj, Finset.mul_sum]
  simp_rw [mul_assoc]

/-- `f a = f‚åû ‚Üëa`  -/
theorem FOP‚ÇÅ.apply‚ÇÅ_coe [DecidableEq Œ±] (f : FOP‚ÇÅ Œ±) (a : Œ±) :
    f a = f‚åû a := by
  ext i
  by_cases hf : f a = i <;> simp [hf]

/-- `f a b = f‚åû ‚Üëa ‚Üëb`  -/
theorem FOP‚ÇÇ.apply‚ÇÇ_coe [DecidableEq Œ±] (f : FOP‚ÇÇ Œ±) (a b : Œ±) :
    f a b = f‚åû a b := by
  ext i
  by_cases hf : f a b = i <;> simp [hf]
